---
# Windows Server Unified Deployment Controller (2019 & 2025)
# Usage: ansible-playbook windows-server-unified-controller.yaml -e action=install -e windows_version=2019|2025
- name: Windows Server Unified Deployment Controller
  hosts: localhost
  become: yes
  vars:
    # Basic settings
    kubevirt_namespace: kubevirt
    vm_cpu_model: host-model
    vm_cpu_sockets: 1
    vm_cpu_threads: 1
    storage_dir: /var/lib/kubevirt
    windows_admin_password: "{{ admin_password | default('SecureP@ssw0rd!') }}"
    windows_product_key: "{{ product_key | default('') }}"
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Set default variables
      ansible.builtin.set_fact:
        action: "{{ action | default('install') }}"
        windows_version: "{{ windows_version | default('2019') }}"

    - name: Set version-specific variables
      ansible.builtin.set_fact:
        vm_cpu_cores: "{{ 4 if windows_version == '2019' else 6 }}"
        vm_memory: "{{ '8Gi' if windows_version == '2019' else '12Gi' }}"
        system_disk_size: "{{ '25Gi' if windows_version == '2019' else '30Gi' }}"
        vhd_filename: "{{ 'win2019server.vhd' if windows_version == '2019' else 'win2025server.vhdx' }}"
        vm_name: "{{ vmName | default('win2019server' if windows_version == '2019' else 'win2025server') }}"

    - name: Set more version-specific variables
      ansible.builtin.set_fact:
        vhd_path: "./{{ vhd_filename }}"
        vhd_download_url: >-
          {{ vhd_url | default('https://software-download.microsoft.com/download/pr/17763.737.amd64fre.rs5_release_svc_refresh.190906-2324_server_serverdatacentereval_en-us_1.vhd' 
          if windows_version == '2019' 
          else 'https://go.microsoft.com/fwlink/?linkid=2293215&clcid=0x409&culture=en-us&country=us') }}
    - name: Display action being performed
      ansible.builtin.debug:
        msg:
          - "üéØ Windows Server Unified Deployment Controller"
          - "Windows Version: {{ windows_version | upper }}"
          - "Action: {{ action | upper }}"
          - "VM Name: {{ vm_name }}"
          - "Namespace: {{ kubevirt_namespace }}"
          - "VHD File: {{ vhd_filename }}"

    - name: Validate parameters
      block:
        - name: Validate action parameter
          ansible.builtin.fail:
            msg: "Invalid action '{{ action }}'. Must be one of: install, uninstall, reinstall, status"
          when: action not in ['install', 'uninstall', 'reinstall', 'status']

        - name: Validate Windows version parameter
          ansible.builtin.fail:
            msg: "Invalid windows_version '{{ windows_version }}'. Must be one of: 2019, 2025"
          when: windows_version not in ['2019', '2025']

    # Install Action
    - name: Execute Windows Server installation
      ansible.builtin.include_tasks: "windows-server/windows-server-{{ windows_version }}-install.yaml"
      tags:
        - install
        - windows_install
        - access_services
      when: action == 'install'

    # Uninstall Action
    - name: Execute Windows Server uninstallation
      ansible.builtin.include_tasks: "windows-server/windows-server-{{ windows_version }}-uninstall.yaml"
      when: action == 'uninstall'

    # Status Action
    - name: Execute Windows Server status check
      ansible.builtin.include_tasks: "windows-server/windows-server-{{ windows_version }}-status.yaml"
      tags:
        - status
        - fast_status
      when: action == 'status'

    # Reinstall Action (uninstall then install)
    - name: Execute Windows Server reinstallation
      block:
        - name: Display reinstall information
          ansible.builtin.debug:
            msg: "üîÑ Starting reinstall process for Windows {{ windows_version }} - uninstall followed by install"
        - name: Execute uninstall phase
          ansible.builtin.include_tasks: "windows-server/windows-server-{{ windows_version }}-uninstall.yaml"
        - name: Wait between uninstall and install
          ansible.builtin.debug:
            msg: "‚è≥ Waiting 15 seconds between uninstall and install phases..."
        - name: Pause for cleanup
          ansible.builtin.wait_for:
            timeout: 15
        - name: Execute install phase
          ansible.builtin.include_tasks: "windows-server/windows-server-{{ windows_version }}-install.yaml"
      when: action == 'reinstall'

    - name: Display completion message
      ansible.builtin.debug:
        msg:
          - "‚úÖ Windows Server {{ windows_version }} {{ action | upper }} completed successfully!"
          - ""
          - "Available commands:"
          - "  Windows 2019:"
          - "    Install:    ansible-playbook windows-server-unified-controller.yaml -e action=install -e windows_version=2019"
          - "    Uninstall:  ansible-playbook windows-server-unified-controller.yaml -e action=uninstall -e windows_version=2019" 
          - "    Reinstall:  ansible-playbook windows-server-unified-controller.yaml -e action=reinstall -e windows_version=2019"
          - "    Status:     ansible-playbook windows-server-unified-controller.yaml -e action=status -e windows_version=2019"
          - ""
          - "  Windows 2025:"
          - "    Install:    ansible-playbook windows-server-unified-controller.yaml -e action=install -e windows_version=2025"
          - "    Uninstall:  ansible-playbook windows-server-unified-controller.yaml -e action=uninstall -e windows_version=2025" 
          - "    Reinstall:  ansible-playbook windows-server-unified-controller.yaml -e action=reinstall -e windows_version=2025"
          - "    Status:     ansible-playbook windows-server-unified-controller.yaml -e action=status -e windows_version=2025"
          - ""
          - "Custom options:"
          - "  - Custom password: -e admin_password='YourPassword!'"
          - "  - Custom VHD URL:  -e vhd_url='https://your-custom-vhd-url.com/file.vhd'"
          - "  - Product key:     -e product_key='XXXXX-XXXXX-XXXXX-XXXXX-XXXXX'"
