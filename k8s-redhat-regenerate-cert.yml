---
- name: Regenerate Kubernetes admin kubeconfig and SSH host fingerprint
  hosts: localhost
  become: yes  # Ensures all tasks run with elevated privileges
  tasks:
    
    # 1. Stop SSH service
    - name: Stop SSH service
      ansible.builtin.service:
        name: sshd
        state: stopped

    # 2. Remove old SSH host keys
    - name: Remove old SSH host keys
      ansible.builtin.file:
        path: /etc/ssh/ssh_host_*
        state: absent

    # 3. Regenerate SSH host keys
    - name: Regenerate SSH host keys
      ansible.builtin.command:
        cmd: ssh-keygen -A

    # 4. Start SSH service
    - name: Start SSH service
      ansible.builtin.service:
        name: sshd
        state: started

    # 5. Remove old admin.conf
    - name: Remove old admin.conf
      ansible.builtin.file:
        path: /etc/kubernetes/admin.conf
        state: absent

    # 6. Remove old Kubernetes admin certs
    - name: Remove old Kubernetes admin certs
      ansible.builtin.file:
        path: /etc/kubernetes/pki/users/kubernetes-admin
        state: absent

    # 7. Regenerate the admin kubeconfig
    - name: Regenerate admin kubeconfig
      ansible.builtin.command:
        cmd: kubeadm init phase kubeconfig admin

    # 8. Extract certificate details from admin.conf
    - name: Extract certificate details from admin.conf
      ansible.builtin.shell:
        cmd: |
          grep client-certificate-data /etc/kubernetes/admin.conf | awk '{print $2}' | base64 -d | openssl x509 -noout -dates -subject
      register: cert_details
      failed_when: cert_details.rc != 0 or cert_details.stdout == ""
      changed_when: false

    - name: Display certificate details
      ansible.builtin.debug:
        msg: "{{ cert_details.stdout }}"

    # 9. Create .kube directory
    - name: Create .kube directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'

    # 10. Copy admin.conf to .kube/config
    - name: Copy admin.conf to .kube/config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes

    # 11. Set ownership of .kube/config
    - name: Set ownership of .kube/config
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.kube/config"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: '0644'