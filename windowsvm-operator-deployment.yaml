apiVersion: apps/v1
kind: Deployment
metadata:
  name: windowsvm-operator
  namespace: default
  labels:
    app: windowsvm-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: windowsvm-operator
  template:
    metadata:
      labels:
        app: windowsvm-operator
    spec:
      serviceAccountName: windowsvm-operator
      containers:
      - name: operator
        image: python:3.11-slim
        command:
        - /bin/bash
        - -c
        - |
          pip install -r /app/kopf-requirements.txt
          python /app/kopf-manifest-controller.py
        env:
        - name: WATCH_NAMESPACE
          value: "default"
        volumeMounts:
        - name: app-code
          mountPath: /app
        - name: ansible-playbook
          mountPath: /root/kubernetes-installer
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: app-code
        configMap:
          name: windowsvm-operator-code
      - name: ansible-playbook
        hostPath:
          path: /root/kubernetes-installer
          type: Directory
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: windowsvm-operator
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: windowsvm-operator
rules:
# WindowsVM CRD permissions
- apiGroups: ["infra.example.com"]
  resources: ["windowsvms"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# KubeVirt permissions
- apiGroups: ["kubevirt.io"]
  resources: ["virtualmachines", "virtualmachineinstances"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Core Kubernetes permissions
- apiGroups: [""]
  resources: ["events", "configmaps", "secrets", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# Storage permissions
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
# CDI permissions for VM images
- apiGroups: ["cdi.kubevirt.io"]
  resources: ["datavolumes"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: windowsvm-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: windowsvm-operator
subjects:
- kind: ServiceAccount
  name: windowsvm-operator
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: windowsvm-operator-code
  namespace: default
data:
  kopf-manifest-controller.py: |
    # The actual Python code would be inserted here
    # For production, build a proper Docker image instead
  kopf-requirements.txt: |
    kopf>=1.37.0
    kubernetes>=25.0.0
    pyyaml>=6.0
