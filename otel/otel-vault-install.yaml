# Tasks to wire Vault metrics into the OTel Collector configuration

- name: Resolve Vault metrics token when unset
  ansible.builtin.set_fact:
    vault_metrics_token: "{{ vault_metrics_token_resolved }}"
  vars:
    vault_metrics_token_resolved: >-
      {{
        (
          vault_metrics_token | default('', true) | trim | regex_replace('^(?i)none$', '')
        )
        or (
          vault_token | default('', true) | trim | regex_replace('^(?i)none$', '')
        )
        or (
          lookup('file', '/root/.vault-token', errors='ignore') | default('') | trim | regex_replace('^(?i)none$', '')
        )
      }}
  when: vault_metrics_token | default('') | trim | length == 0
  no_log: true

- name: Validate Vault OTLP configuration
  ansible.builtin.assert:
    that:
      - vault_otel_endpoint | default('') | length > 0
      - vault_otel_token | default('') | length > 0
      - vault_metrics_token | default('') | length > 0
    fail_msg: "vault_otel_endpoint, vault_otel_token, and vault_metrics_token must be provided to enable Vault metrics."

- name: Merge Vault metrics pipeline into collector configuration
  ansible.builtin.set_fact:
    otel_config: "{{ otel_config | combine(vault_config_fragment, recursive=True) }}"
  vars:
    vault_config_fragment:
      receivers:
        prometheus/vault:
          config:
            scrape_configs:
              - job_name: 'vault'
                metrics_path: /v1/sys/metrics
                params:
                  format: [prometheus]
                static_configs:
                  - targets: ['vault.default.svc.cluster.local:8200']
                authorization:
                  type: Bearer
                  credentials: "${VAULT_PROMETHEUS_TOKEN}"
                metric_relabel_configs:
                  - source_labels: [__name__]
                    regex: 'vault_core_unsealed|vault_core_leader|vault_core_active_handles|vault_request_count_total|vault_request_duration_seconds.*|vault_request_errors_total|vault_storage_puts_total|vault_storage_gets_total|vault_storage_list_total|vault_token_create_total|vault_token_revoke_total|vault_auth_method_request_count_total|vault_audit_log_request_count_total|vault_core_standby|process_cpu_seconds_total|process_resident_memory_bytes'
                    action: keep
      exporters:
        otlphttp/vault:
          endpoint: "${VAULT_OTEL_ENDPOINT}"
          headers:
            Authorization: "Bearer ${VAULT_OTEL_TOKEN}"
          tls:
            insecure: true
      service:
        pipelines:
          metrics/vault:
            receivers:
              - prometheus/vault
            processors:
              - batch
            exporters:
              - otlphttp/vault

- name: Register Vault exporter credentials for collector deployment
  ansible.builtin.set_fact:
    otel_env_vars: "{{ otel_env_vars + [
      { 'name': 'VAULT_OTEL_ENDPOINT', 'value': vault_otel_endpoint },
      { 'name': 'VAULT_OTEL_TOKEN', 'value': vault_otel_token },
      { 'name': 'VAULT_PROMETHEUS_TOKEN', 'value': vault_metrics_token }
    ] }}"
  no_log: true

- name: Note Vault metrics pipeline activation
  ansible.builtin.debug:
    msg: "Vault metrics pipeline enabled with target {{ vault_otel_endpoint }}"
